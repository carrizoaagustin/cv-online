name: Go Test

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read

jobs:
  test:
    services:
      db-test:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest

    env:
      APP_ENVIRONMENT: ${{ vars.APP_ENVIRONMENT }}
      APP_PORT: ${{ vars.APP_PORT }}
      PSQL_SCHEMA: ${{ vars.PSQL_SCHEMA }}
      PSQL_URL: ${{ vars.PSQL_URL }}
      PSQL_SSL_MODE: ${{ vars.PSQL_SSL_MODE }}
      PRE_TEST_ENTRYPOINT: "pre-test"
      POST_TEST_ENTRYPOINT: "post-test"
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod

    - name: Build
      run: go build -v ./...

    - name: PRE-TEST
      run: |
        go run ./cmd/pre_tests

    - name: generate test coverage
      run: go test ./... -coverprofile=./cover.out -covermode=atomic -coverpkg=./...
  
    - name: check test coverage
      uses: vladopajic/go-test-coverage@v2
      with:
        config: ./.testcoverage.yml

    - name: POST-TEST
      run: |
        go run ./cmd/post_tests
        rm -f ${{vars.PRE_TEST_ENTRYPOINT}} ${{vars.POST_TEST_ENTRYPOINT}}